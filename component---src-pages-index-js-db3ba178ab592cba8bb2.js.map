{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/styles/GlobalStyle.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","IndexPage","a","createElement","title","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","StyledHeader","styled","div","withConfig","displayName","componentId","TitleSection","StyledDescription","Header","siteTitle","siteDescription","react_default","createGlobalStyle","_templateObject","Layout","children","_3603942769","Fragment","GlobalStyle","header","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAWeQ,UANG,kBAChBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,2PCKf,SAASC,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAML,EAASE,EAATF,MAC9BM,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAb,EAAAC,cAACa,EAAAd,EAAD,CACEe,eAAgB,CACdT,QAEFJ,MAAOA,EACPc,cAAa,QAAUR,EAAKI,aAAaV,MACzCK,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShB,GAEX,CACEiB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAShB,GAEX,CACEe,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfJ,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbF,EAAIoB,UAAY,CACdlB,YAAamB,IAAUC,OACvBnB,KAAMkB,IAAUC,OAChBlB,KAAMiB,IAAUE,QAAQF,IAAUG,QAClCzB,MAAOsB,IAAUC,OAAOG,YAGXzB,iQCnFT0B,EAAeC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAGJ,CAAH,mCAIZK,EAAeL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAGJ,CAAH,2FAMZM,EAAoBN,IAAOC,IAAVC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAGJ,CAAH,gDAOjBO,EAAS,SAAAjC,GAAA,IAAGkC,EAAHlC,EAAGkC,UAAWC,EAAdnC,EAAcmC,gBAAd,OACbC,EAAAxC,EAAAC,cAACkC,EAAD,KACEK,EAAAxC,EAAAC,cAAC4B,EAAD,KACGS,GAEHE,EAAAxC,EAAAC,cAACmC,EAAD,KACGG,KAKPF,EAAOd,UAAY,CACjBe,UAAWd,IAAUC,QAGvBY,EAAOf,aAAe,CACpBgB,UAAS,cAGID,uJCtCAI,kBAAfC,KCMMC,EAAS,SAAAvC,GAAkBA,EAAfwC,SAAe,IACzBlC,EAAOmC,EAAAnC,KAWb,OACE8B,EAAAxC,EAAAC,cAAAuC,EAAAxC,EAAA8C,SAAA,KACAN,EAAAxC,EAAAC,cAAC8C,EAAD,MACAP,EAAAxC,EAAAC,cAAC+C,EAAD,CAAQV,UAAW5B,EAAKF,KAAKI,aAAaV,MAAOqC,gBAAiB7B,EAAKF,KAAKI,aAAaP,gBAK7FsC,EAAOpB,UAAY,CACjBqB,SAAUpB,IAAUyB,KAAKrB,YAGZe","file":"component---src-pages-index-js-db3ba178ab592cba8bb2.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n  </Layout>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nconst StyledHeader = styled.div`\n  font-size: 4rem;\n  color: #fff0b5;\n`\nconst TitleSection = styled.div`\n  font-family: Verdana, Geneva, sans-serif;\n  font-weight: bold; \n  text-align: center;\n  padding: 15%;\n`\nconst StyledDescription = styled.div`\n  font-size: 1.5rem;\n  padding: 5%;\n  color: #4d8a76;\n\n`\n\nconst Header = ({ siteTitle, siteDescription }) => (\n  <TitleSection>\n    <StyledHeader>\n      {siteTitle}\n    </StyledHeader>\n    <StyledDescription>\n      {siteDescription}\n    </StyledDescription>\n  </TitleSection>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: `Sarah Witt`,\n}\n\nexport default Header\n","import { createGlobalStyle } from \"styled-components\"\n\nexport default createGlobalStyle`\n  body {\n    background-color: #6fc7ab;\n    \n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport GlobalStyle from \"../styles/GlobalStyle\"\n\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title,\n          description\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n    <GlobalStyle/>\n    <Header siteTitle={data.site.siteMetadata.title} siteDescription={data.site.siteMetadata.description} />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}